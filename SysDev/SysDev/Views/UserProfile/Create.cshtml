@model SysDev.Models.AddUserViewModel
@{
    ViewBag.Title = "Create";
    Layout = null;
}



@using (Html.BeginForm("Save", "UserProfile", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "register-user" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="modal-header">
        <h4 id="exampleModalLongTitle">
            Create User
            <a class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </a>
        </h4>
    </div>
    <div class="modal-body" id="modal-content">
        <div class="row">
            <fieldset>
                <div class="col-md-6">
                    <div  class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.FirstName, new { @class = "label text-black control-label", })
                        @Html.TextBoxFor(m => m.Profile.FirstName, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.FirstName, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.MiddleName, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.MiddleName, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.MiddleName, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.LastName, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.LastName, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.LastName, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(m => m.Profile.Gender, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.Gender, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.Gender, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(m => m.Profile.MaritalStatus, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.MaritalStatus, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.MaritalStatus, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.Address, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.Address, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.Address, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Account.Email, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Account.Email, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Account.Email, "", new { @class = "has-error label text-red control-label" })
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.CompanyName, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.CompanyName, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.CompanyName, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.CompanyId, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.CompanyId, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.CompanyId, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.ContactNo, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Profile.ContactNo, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.ContactNo, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Account.Email, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Account.Email, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Account.Email, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Account.UserName, new { @class = "label text-black control-label" })
                        @Html.TextBoxFor(m => m.Account.UserName, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Account.UserName, "", new { @class = "has-error label text-red control-label" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.LabelFor(m => m.Profile.MaritalStatus, new { @class = "label text-black control-label", })
                        @Html.TextBoxFor(m => m.Profile.MaritalStatus, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.Profile.MaritalStatus, "", new { @class = "has-error label text-red control-label" })
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
    <div class="modal-footer">
        <div id="info" class="callout callout-danger" style="display:none">
            <p id="dialog-alert"></p>
        </div>
        <button type="button" class="btn " data-dismiss="modal">Close</button>
        <button type="submit" id="save" class="btn btn-primary">Save changes</button>
    </div>
}
@Scripts.Render("~/bundles/jqueryval");
<script>
    $("#register-user").on("submit", function (event) {
        event.preventDefault();
        var $this = $(this);
        var frmValues = $this.serialize();
        if($("#register-user").valid()) {            $.ajax({                url: $this.attr('action'),
                type: $this.attr('method'),
                data: frmValues,
                success: function (response) {
                    if (response != null && response.success) {
                        alert("succes: " + response.responseText);
                    } else {
                        // DoSomethingElse()
                        alert("else: " +response);
                    }
                },                error: function () {                    swal({                        title: "Error Occored",                        timer: 3000,                        type: "error"                    }).catch(swal.noop);                }            });        }            });    
</script>    


